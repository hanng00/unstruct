AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - c8-cfn-patch
  - AWS::Serverless-2016-10-31
Description: unstruct-backend-v2

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs22.x
    MemorySize: 512
    Architectures:
      - x86_64
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref UnstructTable
        S3_BUCKET: !Ref FileStorageBucket

Resources:
  # DynamoDB Table with new GSI structure
  UnstructTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: ReverseLookup
          KeySchema:
            - AttributeName: SK
              KeyType: HASH
            - AttributeName: PK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # S3 Bucket for file storage
  FileStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # Files API
  GetPresignedUrl:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/files/GetPresignedUrl.handler
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref FileStorageBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref FileStorageBucket
      Events:
        Api:
          Type: Api
          Properties:
            Path: /files/get-presigned-url
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  ListFiles:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/files/ListFiles.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /files
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  PutFile:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/files/PutFile.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /files/{fileId}
            Method: PUT
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  GetFile:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/files/GetFile.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        UnstructApi:
          Type: Api
          Properties:
            Path: /files/{fileId}
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  GetFileDownloadUrl:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/files/GetFileDownloadUrl.handler
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref FileStorageBucket
        - DynamoDBReadPolicy:
            TableName: !Ref UnstructTable
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref FileStorageBucket
      Events:
        Api:
          Type: Api
          Properties:
            Path: /files/{fileId}/download-url
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  GetFileExtractions:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/files/GetFileExtractions.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /files/{fileId}/extractions
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  # <-- Data Models -->
  ListDataModels:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/data-model/ListDataModels.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /data-models
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  PostDataModel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/data-model/PostDataModel.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /data-models
            Method: POST
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  GetDataModel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/data-model/GetDataModel.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /data-models/{id}
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  PutDataModel:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/data-model/PutDataModel.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /data-models/{id}
            Method: PUT
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  # <-- Extractions -->
  PostExtraction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/extractions/PostExtraction.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /extractions
            Method: POST
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  # <-- Workspaces -->
  ListWorkspaces:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/ListWorkspaces.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  CreateWorkspace:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/CreateWorkspace.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces
            Method: POST
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  GetWorkspace:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/GetWorkspace.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  PutWorkspace:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/PutWorkspace.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}
            Method: PUT
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  ListWorkspaceFiles:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/ListWorkspaceFiles.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}/files
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  AddFilesToWorkspace:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/AddFilesToWorkspace.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}/files
            Method: POST
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  RemoveFileFromWorkspace:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/RemoveFileFromWorkspace.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}/files/{fileId}
            Method: DELETE
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  ListWorkspaceExtractions:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/ListWorkspaceExtractions.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}/extractions
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  RunWorkspaceExtractions:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/RunWorkspaceExtractions.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}/extractions/run
            Method: POST
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  UpdateWorkspaceExtraction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/workspace/UpdateWorkspaceExtraction.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /workspaces/{id}/extractions/{fileId}
            Method: PUT
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  GetExtraction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/extractions/GetExtraction.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /extractions/{id}
            Method: GET
            Auth:
              Authorizer: CognitoAuth
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

  ProcessExtraction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/features/extractions/ProcessExtraction.handler
      Timeout: 600
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UnstructTable
        - S3CrudPolicy:
            BucketName: !Ref FileStorageBucket
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref FileStorageBucket
          DYNAMODB_TABLE: !Ref UnstructTable
      Events:
        DynamoDBStreams:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt UnstructTable.StreamArn
            FilterCriteria:
              Filters:
                - Pattern: |
                    {
                      "eventName": ["INSERT"],
                      "dynamodb": {
                        "Keys": {
                          "SK": {
                            "S": [{ "prefix": "EXTRACTION#" }]
                          }
                        }
                      }
                    }
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true

Outputs:
  DynamoDBTableName:
    Description: DynamoDB table name
    Value: !Ref UnstructTable
    Export:
      Name: !Sub "${AWS::StackName}-DynamoDBTable"

  S3BucketName:
    Description: S3 bucket name for file storage
    Value: !Ref FileStorageBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3Bucket"
